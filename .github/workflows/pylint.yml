name: Pylint

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  pull-requests: write  # Needed for posting PR comments

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures git ls-files works properly

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint
          pip install -r requirements.txt

      - name: Run pylint and save output
        run: |
          pylint $(git ls-files '*.py') | tee pylint_output_${{ matrix.python-version }}.txt || true

      - name: Upload all pylint reports
        uses: actions/upload-artifact@v4
        with:
          name: pylint-report-${{ matrix.python-version }}
          path: pylint_output_${{ matrix.python-version }}.txt

  summarize:
    name: Summarize and comment on PR
    needs: build
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    steps:
      - name: Download all pylint reports
        uses: actions/download-artifact@v4
        with:
          path: reports

      - name: Generate Pylint Summary
        id: pylint-summary
        shell: bash
        run: |
          set +e  # disable exit on error for this step

          summary="### üêç Pylint Scores by Python Version\n\n"
          for file in reports/pylint_output_*.txt; do
            version=$(echo "$file" | grep -oP '\d+\.\d+')
            if [[ ! -f "$file" ]]; then
              summary+="‚ö†Ô∏è Python $version: No report file found\n"
              continue
            fi

            score=$(grep -oP 'rated at \K[0-9.]+(?=/10)' "$file")
            if [[ -n "$score" ]]; then
              summary+="‚úÖ Python $version: $score/10 *(file: \`pylint_output_$version.txt\`)*\n"
            else
              summary+="‚ö†Ô∏è Python $version: No score found\n"
            fi
          done

          echo "summary<<EOF" >> $GITHUB_OUTPUT
          echo "$summary" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Comment on PR with Pylint Summary
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ github.token }}
          issue-number: ${{ github.event.pull_request.number }}
          body: ${{ steps.pylint-summary.outputs.summary }}

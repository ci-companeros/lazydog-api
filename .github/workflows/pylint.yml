name: Pylint

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  pull-requests: write  # Needed for posting PR comments

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
        pip install -r requirements.txt

    - name: Run pylint and save output
      run: |
        pylint $(git ls-files '*.py') | tee pylint_output_${{ matrix.python-version }}.txt || true

    - name: Upload all pylint reports
      uses: actions/upload-artifact@v4
      with:
        name: pylint-reports-${{ matrix.python-version }}
        path: pylint_output_${{ matrix.python-version }}.txt

  summarize:
    name: Summarize and comment on PR
    needs: build
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    
    steps:
    
    - name: Download all pylint reports
      run: |
        for version in 3.10 3.11 3.12 3.13; do
          mkdir -p reports
          gh run download --name "pylint-report-${version}" --dir reports || echo "Missing report for ${version}"
        done
      env:
        GH_TOKEN: ${{ github.token }}

    - name: Generate Pylint Summary
      id: pylint-summary
      run: |
        artifact_url="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}#artifacts"
        echo "summary<<EOF" >> $GITHUB_OUTPUT
        echo "### 🐍 Pylint Scores by Python Version" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
    
        for file in reports/pylint_output_*.txt; do
          version=$(echo "$file" | grep -oP '\d+\.\d+')
          score=$(grep -oP 'rated at \K[0-9.]+(?=/10)' "$file" || true)
          if [[ -n "$score" ]]; then
            echo "✅ Python $version: $score/10 🔗 [View Report]($artifact_url) *(file: \`pylint_output_$version.txt\`)*" >> $GITHUB_OUTPUT
          else
            echo "⚠️ Python $version: No score found 🔗 [View Report]($artifact_url)" >> $GITHUB_OUTPUT
          fi
        done
    
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Comment on PR with Pylint Summary
      uses: peter-evans/create-or-update-comment@v4
      with:
        token: ${{ github.token }}
        issue-number: ${{ github.event.pull_request.number }}
        body: ${{ steps.pylint-summary.outputs.summary }}
        comment-id: pylint-summary
